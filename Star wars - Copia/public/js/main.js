document.addEventListener('DOMContentLoaded', () => {
  // Elementos principais
  const landing = document.getElementById('landing');
  const mainApp = document.getElementById('main-app');
  const startBtn = document.getElementById('start-btn');
  const sectionContent = document.getElementById('section-content');
  let navLinks = document.querySelectorAll('.main-nav a');

  // Conte√∫do base das se√ß√µes (pode ser expandido depois)
  const sections = {
    home: {
      subtitle: 'Bem-vindo √† Gal√°xia',
      title: 'HOME',
      desc: 'Explore o universo de Star Wars RPG. Escolha uma se√ß√£o para come√ßar sua jornada.',
    },
    racas: {
      subtitle: 'Bem-vindo √† Gal√°xia',
      title: 'ESP√âCIES DA GAL√ÅXIA',
      desc: 'Das profundezas de Dagobah √†s alturas de Coruscant, explore as diversas esp√©cies que habitam a gal√°xia muito, muito distante. Cada uma com habilidades √∫nicas, culturas e pap√©is.',
    },
    habilidades: {
      subtitle: 'Bem-vindo √† Gal√°xia',
      title: 'HABILIDADES DA FOR√áA',
      desc: 'A For√ßa flui atrav√©s de todos os seres vivos, mas como algu√©m a manipula define seu destino. Da telecinese aos rel√¢mpagos, da persuas√£o √† precogni√ß√£o, aprenda os poderes que moldam a gal√°xia.',
    },
    classes: {
      subtitle: 'Bem-vindo √† Gal√°xia',
      title: 'CAMINHOS DA GAL√ÅXIA',
      desc: 'Nem todos seguem o caminho da For√ßa. Alguns dominam a tecnologia, outros o combate. Escolha seu papel, molde seu destino.',
    },
    sistema: {
      subtitle: 'Bem-vindo √† Gal√°xia',
      title: 'VIS√ÉO GERAL DO SISTEMA',
      desc: 'Um sistema detalhado projetado para imergir voc√™ no universo Star Wars. Combate, maestria da For√ßa, reputa√ß√£o, alinhamento e muito mais.',
    },
  };

  const racasList = [
    { 
      nome: 'Humanos',
      img: 'images/racas/humanos.png',
      origem: 'Diversos planetas (Coruscant, Corellia, Tatooine, etc.)',
      caracteristicas: 'Vers√°teis, adapt√°veis, com enorme diversidade f√≠sica e cultural.',
      habilidades: 'Adaptabilidade excepcional, criatividade, aptid√£o para qualquer fun√ß√£o (pilotos, soldados, Jedi, l√≠deres).'
    },
    { 
      nome: 'Mandalorianos',
      img: 'images/racas/mandalorianos.png',
      origem: 'Mandalore e planetas colonizados como Concordia',
      caracteristicas: 'Humanos imersos em uma cultura guerreira. Armaduras ic√¥nicas de beskar.',
      habilidades: 'Especialistas em combate, t√°ticas militares, uso de tecnologia e honra marcial ("This is the way").'
    },
    { 
      nome: 'Twi\'lek',
      img: 'images/racas/twilek.png',
      origem: 'Ryloth',
      caracteristicas: 'Humanoides com pele colorida (verde, azul, vermelha) e tent√°culos cranianos (lekku).',
      habilidades: 'Comunica√ß√£o n√£o-verbal com lekku, graciosidade, adaptabilidade social e habilidades de espionagem.'
    },
    { 
      nome: 'Zabrak',
      img: 'images/racas/zabrak.png',
      origem: 'Iridonia (ou Dathomir, no caso dos Zabraks da di√°spora)',
      caracteristicas: 'Chifres no cr√¢nio, tatuagens faciais tradicionais, extrema resist√™ncia f√≠sica e mental.',
      habilidades: 'Resist√™ncia √† dor, determina√ß√£o inabal√°vel, excelentes guerreiros corpo a corpo.'
    },
    { 
      nome: 'Chiss',
      img: 'images/racas/chiss.png',
      origem: 'Csilla (Regi√µes Desconhecidas)',
      caracteristicas: 'Pele azul, olhos vermelhos, racioc√≠nio l√≥gico elevado, cultura isolacionista.',
      habilidades: 'Estrat√©gia t√°tica, frieza emocional, percep√ß√£o espacial avan√ßada.'
    },
    { 
      nome: 'Wookiees',
      img: 'images/racas/wookiee.png',
      origem: 'Kashyyyk',
      caracteristicas: 'Humanoides peludos, altos e fortes, com garras retr√°teis e longevidade acima da m√©dia.',
      habilidades: 'For√ßa sobre-humana, resist√™ncia natural √† dor, excelentes construtores e pilotos.'
    },
    { 
      nome: 'Togruta',
      img: 'images/racas/togruta.png',
      origem: 'Shili',
      caracteristicas: 'Montrals e tent√°culos cranianos, pele colorida com listras √∫nicas.',
      habilidades: 'Audi√ß√£o espacial atrav√©s dos montrals, agilidade, forte conex√£o com a natureza e com a For√ßa.'
    },
    { 
      nome: 'Dathomirianos',
      img: 'images/racas/dathomirianos.png',
      origem: 'Dathomir',
      caracteristicas: 'Mistura de Zabrak e humanos, apar√™ncia selvagem, presen√ßa marcante.',
      habilidades: 'Afinidade com magia das sombras (Irm√£s da Noite), aptid√£o para combate e ocultismo.'
    },
    { 
      nome: 'Nautolanos',
      img: 'images/racas/nautolan.png',
      origem: 'Glee Anselm',
      caracteristicas: 'Pele lisa e tent√°culos na cabe√ßa, apar√™ncia anf√≠bia.',
      habilidades: 'Resist√™ncia subaqu√°tica, percep√ß√£o de ferom√¥nios, reflexos r√°pidos, nado √°gil.'
    },
    { 
      nome: 'Trandoshans',
      img: 'images/racas/trandoshans.png',
      origem: 'Trandosha',
      caracteristicas: 'Reptilianos escamosos, olhos amarelos, postura intimidadora.',
      habilidades: 'Regenera√ß√£o de membros, vis√£o t√©rmica, ca√ßadores instintivos e for√ßa bruta.'
    },
    { 
      nome: 'Mirialans',
      img: 'images/racas/mirialans.png',
      origem: 'Mirial',
      caracteristicas: 'Pele esverdeada/amarelada, tatuagens simb√≥licas no rosto.',
      habilidades: 'Disciplina espiritual, reflexos agu√ßados, conex√£o com a For√ßa comum entre os Jedi.'
    },
    { 
      nome: 'Miraluka',
      img: 'images/racas/miraluka.png',
      origem: 'Alpheridies',
      caracteristicas: 'Human√≥ides cegos de nascen√ßa, cobrem os olhos com faixas ou m√°scaras.',
      habilidades: 'Vis√£o atrav√©s da For√ßa, percep√ß√£o espiritual e energ√©tica extremamente agu√ßada.'
    },
    { 
      nome: 'Chagrians',
      img: 'images/racas/chagrians.png',
      origem: 'Champala',
      caracteristicas: 'Pele azul, chifres frontais e tent√°culos cervicais.',
      habilidades: 'Resist√™ncia a radia√ß√£o e calor, capacidade anf√≠bia, intelecto elevado.'
    },
    { 
      nome: 'Devaronianos',
      img: 'images/racas/devaronianos.png',
      origem: 'Devaron',
      caracteristicas: 'Chifres grandes, pele vermelha ou cinzenta, apar√™ncia demon√≠aca.',
      habilidades: 'Resist√™ncia a venenos, alta toler√¢ncia √† dor, carisma intimidador.'
    },
    { 
      nome: 'Ewoks',
      img: 'images/racas/ewoks.png',
      origem: 'Endor (lua florestal)',
      caracteristicas: 'Pequenos, peludos, de apar√™ncia ursoide, extremamente curiosos e engenhosos.',
      habilidades: 'Camuflagem natural em florestas, intelig√™ncia adaptativa, constru√ß√£o de armadilhas rudimentares.'
    },
    { 
      nome: 'Esp√©cie de Yoda',
      img: 'images/racas/yoda-species.png',
      origem: 'Desconhecida (esp√©cie extremamente rara)',
      caracteristicas: 'Pequenos, pele esverdeada, orelhas longas, longevidade milenar.',
      habilidades: 'Conex√£o intensa com a For√ßa, sabedoria ancestral, resist√™ncia f√≠sica e mental surpreendente.'
    }
  ];

  const habilidadesList = [
    { 
      nome: 'Telecinese',
      desc: 'A capacidade de mover e manipular objetos com a mente atrav√©s da For√ßa. Pode ser usada para levitar objetos, desviar proj√©teis ou realizar ataques √† dist√¢ncia.',
      icon: 'üåÄ',
      cor: '#00eaff',
      nivel: 'B√°sico',
      requisitos: 'Conex√£o inicial com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Truque Mental',
      desc: 'A habilidade de influenciar e manipular a mente de outros seres. Pode ser usada para confundir, persuadir ou at√© mesmo controlar indiv√≠duos mais fracos de mente.',
      icon: 'üß†',
      cor: '#00eaff',
      nivel: 'Intermedi√°rio',
      requisitos: 'Forte conex√£o com a For√ßa e treinamento mental',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Rel√¢mpago da For√ßa',
      desc: 'Um poder destrutivo que canaliza a energia da For√ßa em descargas el√©tricas. Extremamente perigoso e dif√≠cil de controlar, √© uma marca registrada dos usu√°rios do Lado Sombrio.',
      icon: '‚ö°',
      cor: '#a100ff',
      nivel: 'Avan√ßado',
      requisitos: 'Forte conex√£o com o Lado Sombrio',
      alinhamento: 'Lado Sombrio da For√ßa'
    },
    { 
      nome: 'Empurr√£o/Pux√£o da For√ßa',
      desc: 'Uma t√©cnica fundamental que permite empurrar ou puxar objetos e seres atrav√©s da For√ßa. Essencial tanto para combate quanto para situa√ß√µes cotidianas.',
      icon: 'üí®',
      cor: '#00eaff',
      nivel: 'B√°sico',
      requisitos: 'Conex√£o inicial com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Precogni√ß√£o',
      desc: 'A capacidade de ver eventos futuros ou antecipar movimentos atrav√©s da For√ßa. Crucial para o combate com sabre de luz e para evitar perigos.',
      icon: 'üîÆ',
      cor: '#00eaff',
      nivel: 'Intermedi√°rio',
      requisitos: 'Forte conex√£o com a For√ßa e treinamento mental',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'F√∫ria do Lado Sombrio',
      desc: 'Um poder que canaliza emo√ß√µes negativas como raiva e √≥dio para aumentar temporariamente a for√ßa f√≠sica e os poderes da For√ßa. Extremamente perigoso e viciante.',
      icon: 'üî•',
      cor: '#ff003c',
      nivel: 'Avan√ßado',
      requisitos: 'Forte conex√£o com o Lado Sombrio e controle emocional',
      alinhamento: 'Lado Sombrio da For√ßa'
    },
    { 
      nome: 'Dom√≠nio do Sabre de Luz',
      desc: 'Mestre no uso do sabre em combate, com estilos variados como Ataru, Soresu e Djem So. Combina t√©cnica f√≠sica com conex√£o com a For√ßa para criar um estilo √∫nico e letal.',
      icon: '‚öîÔ∏è',
      cor: '#00ff9d',
      nivel: 'Avan√ßado',
      requisitos: 'Treinamento extensivo em combate e forte conex√£o com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Controle Mental Avan√ßado',
      desc: 'Manipula√ß√£o profunda da mente, capaz de iludir at√© os mais resistentes. Permite influenciar decis√µes, criar ilus√µes complexas e at√© mesmo controlar m√∫ltiplos alvos simultaneamente.',
      icon: 'üëÅÔ∏è',
      cor: '#b19cd9',
      nivel: 'Avan√ßado',
      requisitos: 'Dom√≠nio do Truque Mental e forte conex√£o com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Camuflagem da For√ßa',
      desc: 'Capacidade de ocultar sua presen√ßa na For√ßa, usada por usu√°rios avan√ßados e espi√µes Jedi/Sith. Permite passar despercebido por outros sens√≠veis √† For√ßa e realizar miss√µes furtivas.',
      icon: 'ü´•',
      cor: '#2a2a2a',
      nivel: 'Intermedi√°rio',
      requisitos: 'Controle preciso da For√ßa e treinamento em furtividade',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Reflexos Aumentados',
      desc: 'Rea√ß√µes sobre-humanas guiadas pela For√ßa, ideal para combate e pilotagem. Permite antecipar movimentos e reagir instantaneamente a amea√ßas.',
      icon: '‚ö°',
      cor: '#ffd700',
      nivel: 'Intermedi√°rio',
      requisitos: 'Conex√£o com a For√ßa e treinamento f√≠sico',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Sabedoria Jedi',
      desc: 'Conhecimento profundo da hist√≥ria, filosofia e equil√≠brio da For√ßa. Permite compreender melhor os mist√©rios da For√ßa e tomar decis√µes mais s√°bias.',
      icon: 'üìò',
      cor: '#87ceeb',
      nivel: 'Avan√ßado',
      requisitos: 'Anos de estudo e medita√ß√£o',
      alinhamento: 'Lado Luminoso da For√ßa'
    },
    { 
      nome: 'Manuten√ß√£o e Cria√ß√£o de Tecnologia',
      desc: 'Habilidade em construir, reparar e modificar droides, sabres e naves. Combina conhecimento t√©cnico com compreens√£o da For√ßa para criar tecnologia avan√ßada.',
      icon: 'üõ†Ô∏è',
      cor: '#ff8c00',
      nivel: 'Intermedi√°rio',
      requisitos: 'Conhecimento t√©cnico e conex√£o com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Pilotagem Avan√ßada',
      desc: 'Especialista em manobras arriscadas e controle de naves de ca√ßa e cargueiros. Usa a For√ßa para melhorar a precis√£o e o tempo de rea√ß√£o durante voos.',
      icon: 'üöÄ',
      cor: '#00008b',
      nivel: 'Intermedi√°rio',
      requisitos: 'Experi√™ncia em pilotagem e conex√£o com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Combate com Armas de Fogo',
      desc: 'Dom√≠nio de blasters, rifles e t√°ticas de tiro de precis√£o ou cobertura. Combina treinamento militar com uso da For√ßa para melhorar a precis√£o.',
      icon: 'üî´',
      cor: '#8b0000',
      nivel: 'Intermedi√°rio',
      requisitos: 'Treinamento militar e conex√£o com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'F√∫ria Controlada',
      desc: 'Canaliza√ß√£o da raiva para aumentar poder f√≠sico e foco, sem perder o controle. Uma vers√£o mais equilibrada da F√∫ria do Lado Sombrio.',
      icon: 'üî•',
      cor: '#ff4500',
      nivel: 'Avan√ßado',
      requisitos: 'Controle emocional avan√ßado e forte conex√£o com a For√ßa',
      alinhamento: 'Ambos os lados da For√ßa'
    },
    { 
      nome: 'Cura com a For√ßa',
      desc: 'Capacidade de regenerar ferimentos e restaurar a energia vital de si ou de aliados. Uma das habilidades mais raras e poderosas do Lado Luminoso.',
      icon: '‚ú®',
      cor: '#00ff7f',
      nivel: 'Avan√ßado',
      requisitos: 'Forte conex√£o com o Lado Luminoso e compaix√£o',
      alinhamento: 'Lado Luminoso da For√ßa'
    }
  ];

  const classesList = [
    { 
      nome: 'Guardi√£o Jedi',
      desc: 'Mestres do combate corpo a corpo e da defesa, os Guardi√µes Jedi s√£o os protetores da paz e da justi√ßa na gal√°xia.',
      icon: 'üõ°Ô∏è',
      cor: '#00eaff',
      habilidades: 'Combate com sabre de luz, defesa avan√ßada, telecinese de combate, e resist√™ncia f√≠sica aprimorada.',
      equipamento: 'Sabre de luz, armadura Jedi, e equipamentos de defesa.',
      alinhamento: 'Lado Luminoso da For√ßa'
    },
    { 
      nome: 'Consular Jedi',
      desc: 'Focados no estudo e dom√≠nio da For√ßa, os Consulares s√£o diplomatas e estudiosos que buscam a harmonia atrav√©s da sabedoria.',
      icon: '‚ú®',
      cor: '#00eaff',
      habilidades: 'Manipula√ß√£o da For√ßa, cura, persuas√£o, e habilidades telep√°ticas.',
      equipamento: 'Sabre de luz, holocrons, e artefatos da For√ßa.',
      alinhamento: 'Lado Luminoso da For√ßa'
    },
    { 
      nome: 'Guerreiro Sith',
      desc: 'Brutais e implac√°veis, os Guerreiros Sith canalizam sua raiva e √≥dio em poder destrutivo no campo de batalha.',
      icon: '‚öîÔ∏è',
      cor: '#a100ff',
      habilidades: 'Combate agressivo, rel√¢mpagos da For√ßa, f√∫ria sombria, e resist√™ncia ao dano.',
      equipamento: 'Sabre de luz vermelho, armadura Sith, e equipamentos de combate.',
      alinhamento: 'Lado Sombrio da For√ßa'
    },
    { 
      nome: 'Inquisidor Sith',
      desc: 'Manipuladores da mente e da For√ßa, os Inquisidores s√£o mestres da tortura e da extra√ß√£o de informa√ß√µes.',
      icon: 'üëÅÔ∏è',
      cor: '#a100ff',
      habilidades: 'Manipula√ß√£o mental, tortura, furtividade, e poderes sombrios da For√ßa.',
      equipamento: 'Sabre de luz duplo, equipamentos de tortura, e artefatos Sith.',
      alinhamento: 'Lado Sombrio da For√ßa'
    },
    { 
      nome: 'Ca√ßador de Recompensas',
      desc: 'Mercen√°rios implac√°veis que ca√ßam alvos por toda a gal√°xia, movidos pelo dinheiro e pela reputa√ß√£o.',
      icon: 'üéØ',
      cor: '#ffb300',
      habilidades: 'Rastreamento, combate √† dist√¢ncia, furtividade, e negocia√ß√£o.',
      equipamento: 'Armas de fogo, armaduras Mandalorianas, e gadgets de ca√ßa.',
      alinhamento: 'Neutro'
    },
    { 
      nome: 'Contrabandista',
      desc: 'Mestres da discri√ß√£o e do com√©rcio ilegal, os Contrabandistas navegam pelas sombras da gal√°xia.',
      icon: 'üï∂Ô∏è',
      cor: '#ffb300',
      habilidades: 'Pilotagem, furtividade, negocia√ß√£o, e conhecimento do submundo.',
      equipamento: 'Nave espacial, armas ocultas, e equipamentos de contrabando.',
      alinhamento: 'Neutro'
    },
    { 
      nome: 'Soldado/Stormtrooper',
      desc: 'Elite militar treinada para servir ao Imp√©rio, os Stormtroopers s√£o a for√ßa de combate mais temida da gal√°xia.',
      icon: 'üíÇ',
      cor: '#fff',
      habilidades: 'Combate militar, t√°ticas de grupo, uso de armas, e disciplina.',
      equipamento: 'Armadura Stormtrooper, blasters, e equipamentos militares.',
      alinhamento: 'Imp√©rio'
    },
    { 
      nome: 'Engenheiro Droide',
      desc: 'Especialistas em tecnologia e constru√ß√£o, os Engenheiros Droide s√£o mestres da mec√¢nica e da programa√ß√£o.',
      icon: 'ü§ñ',
      cor: '#00eaff',
      habilidades: 'Constru√ß√£o de droides, programa√ß√£o, reparos, e hacking.',
      equipamento: 'Ferramentas de engenharia, droides, e equipamentos t√©cnicos.',
      alinhamento: 'Neutro'
    },
  ];

  const sistemaList = [
    { 
      nome: 'Combate',
      desc: 'Sistema de combate h√≠brido por turnos/a√ß√£o que combina elementos t√°ticos com a√ß√£o din√¢mica.',
      icon: '‚öîÔ∏è',
      cor: '#00eaff',
      mecanicas: 'Rolagem de dados para ataques e defesas, pontos de vida, armadura e resist√™ncia.',
      interacoes: 'Integra√ß√£o com habilidades da For√ßa, equipamentos e status de personagem.',
      desenvolvimento: 'Progress√£o atrav√©s de pontos de combate e experi√™ncia em batalha.'
    },
    { 
      nome: 'Modos de Combate',
      desc: 'Diferentes abordagens de combate que testam habilidades espec√≠ficas e estrat√©gias √∫nicas.',
      icon: 'üéØ',
      cor: '#ff4500',
      mecanicas: 'Sistema de regras espec√≠ficas para cada modo de combate, incluindo Sabre vs Sabre, Sabre vs Blaster, Blaster vs Blaster e For√ßa vs Todos.',
      interacoes: 'Integra√ß√£o com habilidades da For√ßa, equipamentos e t√°ticas de combate.',
      desenvolvimento: 'Progress√£o atrav√©s de experi√™ncia em diferentes modos de combate e adapta√ß√£o de estrat√©gias.'
    },
    { 
      nome: 'For√ßa & Habilidades',
      desc: 'Sistema de evolu√ß√£o que permite escolher entre o lado claro ou sombrio da For√ßa.',
      icon: '‚ú®',
      cor: '#a100ff',
      mecanicas: 'Pontos de For√ßa, medidor de alinhamento, e sistema de aprendizado de habilidades.',
      interacoes: 'Afeta combate, di√°logos, e intera√ß√µes com o ambiente.',
      desenvolvimento: 'Progress√£o atrav√©s de treinamento e uso das habilidades.'
    },
    { 
      nome: 'Reputa√ß√£o',
      desc: 'Sistema de intera√ß√£o com diferentes fac√ß√µes da gal√°xia, incluindo Imp√©rio, Rebeldes, Piratas e Hutts.',
      icon: 'üèÖ',
      cor: '#ffb300',
      mecanicas: 'N√≠veis de reputa√ß√£o, miss√µes espec√≠ficas por fac√ß√£o, e recompensas √∫nicas.',
      interacoes: 'Afeta pre√ßos de mercadores, disponibilidade de miss√µes e rea√ß√µes de NPCs.',
      desenvolvimento: 'Progress√£o atrav√©s de miss√µes e escolhas alinhadas com cada fac√ß√£o.'
    },
    { 
      nome: 'Alinhamento',
      desc: 'Sistema que reflete suas escolhas morais e como elas moldam seu caminho entre o Lado Luminoso e Sombrio.',
      icon: '‚öñÔ∏è',
      cor: '#00eaff',
      mecanicas: 'Medidor de alinhamento, escolhas com consequ√™ncias, e eventos especiais.',
      interacoes: 'Afeta habilidades da For√ßa, di√°logos e rea√ß√µes de NPCs.',
      desenvolvimento: 'Progress√£o atrav√©s de escolhas morais e a√ß√µes significativas.'
    },
    { 
      nome: 'Equipamento',
      desc: 'Sistema detalhado de armas, sabres de luz, armaduras e gadgets com diferentes n√≠veis de raridade e poder.',
      icon: 'üõ†Ô∏è',
      cor: '#fff',
      mecanicas: 'Sistema de slots de equipamento, modifica√ß√µes, e requisitos de uso.',
      interacoes: 'Afeta combate, habilidades e apar√™ncia do personagem.',
      desenvolvimento: 'Progress√£o atrav√©s de aquisi√ß√£o e melhoria de equipamentos.'
    },
    { 
      nome: 'Navega√ß√£o Espacial',
      desc: 'Sistema de viagens entre sistemas e planetas, incluindo combate espacial e explora√ß√£o.',
      icon: 'üõ∏',
      cor: '#00eaff',
      mecanicas: 'Sistema de navega√ß√£o, combate espacial, e gerenciamento de recursos da nave.',
      interacoes: 'Afeta miss√µes, com√©rcio e explora√ß√£o da gal√°xia.',
      desenvolvimento: 'Progress√£o atrav√©s de melhorias na nave e experi√™ncia em pilotagem.'
    },
  ];

  // Adicionar dados das formas de combate
  const estilosCombateList = [
    {
      nome: 'Forma Zero',
      img: 'images/estilos/forma0.png',
      titulo: 'Forma Zero: A Filosofia Jedi',
      desc: `<b>Caracter√≠sticas:</b> A n√£o-viol√™ncia e a busca pela resolu√ß√£o pac√≠fica. A verdadeira maestria do sabre de luz √© saber quando n√£o us√°-lo. Jedi experientes priorizam a diplomacia e evitam o combate sempre que poss√≠vel.<br><b>Praticantes Not√°veis:</b> Yoda, Obi-Wan Kenobi (em negocia√ß√µes).`
    },
    {
      nome: 'Shii-Cho',
      img: 'images/estilos/forma1.png',
      titulo: 'Forma I: Shii-Cho (Caminho do Sarlacc)',
      desc: `<b>Caracter√≠sticas:</b> A forma mais b√°sica e vers√°til, foca em golpes amplos e defesa em seis zonas do corpo. Ensina fundamentos a Younglings e Padawans. √â a 'forma da determina√ß√£o'.<br><b>Praticantes Not√°veis:</b> Kit Fisto, Anakin Skywalker (inicialmente).<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 1d20<br>
      üé≤ <b>Defesa:</b> 2d10 (contra m√∫ltiplos oponentes)<br>
      <b>Vantagem:</b> Contra 2 ou mais inimigos, usa 2d20 no ataque, mantendo o maior resultado.<br>
      <b>Desvantagem:</b> Em duelos 1x1, rola apenas 1d10 no ataque.<br>
      <b>Habilidade:</b> Pode contra-atacar ap√≥s uma defesa bem-sucedida contra grupos, rolando 1d10 de dano imediato.`
    },
    {
      nome: 'Makashi',
      img: 'images/estilos/forma2.png',
      titulo: 'Forma II: Makashi (Caminho do Ysalamir)',
      desc: `<b>Caracter√≠sticas:</b> Especializada em duelos de sabre contra sabre, com movimentos elegantes e precisos. Favorece o controle e a economia de energia.<br><b>Praticantes Not√°veis:</b> Conde Dookan, Asajj Ventress.<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 2d10 (contra sabres) ou 1d20 (contra outros)<br>
      üé≤ <b>Defesa:</b> 1d20<br>
      <b>Vantagem:</b> Em duelos de sabre, usa 2d10 no ataque, representando precis√£o e controle.<br>
      <b>Desvantagem:</b> Contra inimigos usando blasters, sua defesa sofre ‚Äî s√≥ rola 1d10 na defesa contra disparos.<br>
      <b>Habilidade:</b> Ap√≥s um sucesso cr√≠tico no ataque (rolagem m√°xima), aplica um contra-ataque imediato com 1d10, ignorando a defesa do oponente.`
    },
    {
      nome: 'Soresu',
      img: 'images/estilos/forma3.png',
      titulo: 'Forma III: Soresu (Caminho do Mynock)',
      desc: `<b>Caracter√≠sticas:</b> Defesa absoluta, bloqueio de disparos de blaster e resist√™ncia. Ideal para situa√ß√µes de cerco.<br><b>Praticantes Not√°veis:</b> Obi-Wan Kenobi, Luminara Unduli.<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 1d10<br>
      üé≤ <b>Defesa:</b> 2d20 (sempre)<br>
      <b>Vantagem:</b> Defesa quase impenetr√°vel ‚Äî sempre rola 2d20 na defesa.<br>
      <b>Desvantagem:</b> Ataque fixo em 1d10, sem acesso a dados maiores.<br>
      <b>Habilidade:</b> Se obtiver 18+ nos dois dados de defesa, ativa um contra-ataque com 1d20 imediatamente.`
    },
    {
      nome: 'Ataru',
      img: 'images/estilos/forma4.png',
      titulo: 'Forma IV: Ataru (Caminho do Falc√£o)',
      desc: `<b>Caracter√≠sticas:</b> Acrob√°tica, agressiva, utiliza saltos e giros. Exige grande conex√£o com a For√ßa para impulsionar movimentos.<br><b>Praticantes Not√°veis:</b> Yoda, Qui-Gon Jinn.<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 2d20 (escolhe o maior)<br>
      üé≤ <b>Defesa:</b> 1d10 (sempre)<br>
      <b>Vantagem:</b> Ataques extremamente √°geis e letais ‚Äî sempre rola 2d20 no ataque, mantendo o maior.<br>
      <b>Desvantagem:</b> Defesa extremamente fr√°gil ‚Äî defesa sempre √© s√≥ 1d10, independentemente do inimigo.<br>
      <b>Habilidade:</b> Se derrotar um inimigo com um √∫nico golpe, pode gastar 1 ponto de Foco para atacar outro alvo imediatamente com 1d20.`
    },
    {
      nome: 'Shien/Djem So',
      img: 'images/estilos/forma5.png',
      titulo: 'Forma V: Shien/Djem So (Caminho do Drag√£o)',
      desc: `<b>Caracter√≠sticas:</b> Reflete disparos de blaster e converte defesa em ataque poderoso. Djem So √© mais voltada para duelos.<br><b>Praticantes Not√°veis:</b> Anakin Skywalker, Luke Skywalker.<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 2d20 (sempre)<br>
      üé≤ <b>Defesa:</b> 1d20 (Shien, contra blasters) ou 2d10 (Djem So, contra sabres)<br>
      <b>Vantagem:</b> Ataque sempre com 2d20, representando for√ßa bruta e agressividade.<br>
      <b>Desvantagem:</b> Defesa varia ‚Äî contra sabres usa 2d10, o que √© mais arriscado, e contra blasters usa 1d20, que √© mais confi√°vel.<br>
      <b>Habilidade:</b> Sempre que defende com sucesso, pode refletir o dano de volta ao inimigo, rolando 1d10 como contra-ataque autom√°tico.`
    },
    {
      nome: 'Niman',
      img: 'images/estilos/forma6.png',
      titulo: 'Forma VI: Niman (Caminho do Rancor)',
      desc: `<b>Caracter√≠sticas:</b> Equil√≠brio entre todas as formas, incorpora habilidades da For√ßa. Vers√°til, mas sem especializa√ß√£o extrema.<br><b>Praticantes Not√°veis:</b> Exar Kun, Jedi Consulares.<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 1d20<br>
      üé≤ <b>Defesa:</b> 1d20<br>
      <b>Vantagem:</b> Pode adicionar 1d10 extra a qualquer rolagem (ataque ou defesa) quando combinado com habilidades da For√ßa.<br>
      <b>Desvantagem:</b> Sem dados extras em ataques ou defesas puramente f√≠sicos ‚Äî depende do uso da For√ßa.<br>
      <b>Habilidade:</b> Se bloquear usando a For√ßa (gastando recurso ou foco), realiza um contra-ataque com 1d20.`
    },
    {
      nome: 'Juyo/Vaapad',
      img: 'images/estilos/forma7.png',
      titulo: 'Forma VII: Juyo/Vaapad (Caminho do Vornskr)',
      desc: `<b>Caracter√≠sticas:</b> A mais agressiva e imprevis√≠vel, canaliza emo√ß√µes intensas. Vaapad √© uma varia√ß√£o criada por Mace Windu.<br><b>Praticantes Not√°veis:</b> Mace Windu, Sora Bulq.<br><br>
      <b>Mec√¢nicas:</b><br>
      üé≤ <b>Ataque:</b> 2d20 (sempre)<br>
      üé≤ <b>Defesa:</b> 1d10 (sempre)<br>
      <b>Vantagem:</b> Ofensiva devastadora ‚Äî rola 2d20 no ataque, mantendo o maior.<br>
      <b>Desvantagem:</b> Defesa m√≠nima ‚Äî sempre apenas 1d10, altamente vulner√°vel.<br>
      <b>Habilidade:</b> Sempre que causa dano, pode escolher rolar 1d10 adicional como dano extra, mas se falhar na defesa no turno seguinte, sofre +1d10 de dano recebido (arriscando tudo na ofensiva).`
    },
  ];

  const combateModes = [
    {
      nome: 'Sabre vs Sabre',
      desc: 'Duelo tradicional entre usu√°rios da For√ßa, testando t√©cnica e conex√£o com a For√ßa.',
      icon: '‚öîÔ∏è',
      cor: '#00ff9d',
      regras: 'Combate corpo a corpo com sabres de luz, permitindo uso de habilidades da For√ßa para defesa e ataque.',
      vantagens: 'Maior precis√£o com sabre, melhor defesa contra ataques de sabre.',
      desvantagens: 'Vulner√°vel a ataques √† dist√¢ncia.'
    },
    {
      nome: 'Sabre vs Blaster',
      desc: 'Combate entre usu√°rio da For√ßa e atirador, testando defesa e precis√£o.',
      icon: 'üî´',
      cor: '#ff4500',
      regras: 'Usu√°rio do sabre pode desviar tiros, atirador deve manter dist√¢ncia e usar cobertura.',
      vantagens: 'Sabre: Defesa contra tiros. Blaster: Alcance e poder de fogo.',
      desvantagens: 'Sabre: Alcance limitado. Blaster: Vulner√°vel em combate corpo a corpo.'
    },
    {
      nome: 'Blaster vs Blaster',
      desc: 'Combate t√°tico entre atiradores, testando precis√£o e posicionamento.',
      icon: 'üéØ',
      cor: '#ff0000',
      regras: 'Uso de cobertura, tiro de precis√£o e t√°ticas de combate √† dist√¢ncia.',
      vantagens: 'Alcance, poder de fogo e uso de equipamentos t√°ticos.',
      desvantagens: 'Vulner√°vel em combate corpo a corpo e contra usu√°rios da For√ßa.'
    },
    {
      nome: 'For√ßa vs Todos',
      desc: 'Combate focado no uso das habilidades da For√ßa contra qualquer oponente.',
      icon: '‚ú®',
      cor: '#00eaff',
      regras: 'Uso intensivo de poderes da For√ßa, com foco em controle e poder.',
      vantagens: 'Versatilidade, poder ofensivo e defensivo.',
      desvantagens: 'Consumo de energia da For√ßa, vulner√°vel quando exausto.'
    }
  ];

  // Atualizar menu para incluir Estilos de Combate
  const navMenuOrder = [
    'home',
    'racas',
    'habilidades',
    'classes',
    'estilos-combate',
    'sistema',
    'regras'
  ];

  // Adicionar dados das regras
  const regrasList = [
    {
      nome: 'Regras B√°sicas',
      icon: 'üìñ',
      cor: '#00eaff',
      desc: 'Fundamentos do sistema e mec√¢nicas principais.',
      regras: [
        {
          titulo: 'Rolagem de Dados',
          conteudo: 'O sistema utiliza dados de 20 faces (d20) para testes de habilidade e combate. Modificadores s√£o aplicados baseados em atributos, habilidades e equipamentos.'
        },
        {
          titulo: 'N√≠veis e Experi√™ncia',
          conteudo: 'Personagens ganham pontos de experi√™ncia atrav√©s de miss√µes, combates e conquistas. Cada n√≠vel traz novos pontos de habilidade e melhorias.'
        }
      ]
    },
    {
      nome: 'Regras de Combate',
      icon: '‚öîÔ∏è',
      cor: '#ff4500',
      desc: 'Sistema detalhado de combate e intera√ß√µes em batalha.',
      regras: [
        {
          titulo: 'Iniciativa',
          conteudo: 'Determinada por rolagem de d20 . Define a ordem das a√ß√µes em combate.'
        },
        {
          titulo: 'A√ß√µes em Combate',
          conteudo: 'Cada personagem tem uma a√ß√£o principal, uma a√ß√£o b√¥nus e uma rea√ß√£o por turno. Movimento √© separado das a√ß√µes.'
        },
        {
          titulo: 'Dano e Cura',
          conteudo: 'Diferentes tipos de dano (f√≠sico, energia, For√ßa) afetam personagens de maneiras distintas. Cura pode ser aplicada atrav√©s de habilidades, itens ou descanso.'
        }
      ]
    },
    {
      nome: 'Regras da For√ßa',
      icon: '‚ú®',
      cor: '#a100ff',
      desc: 'Mec√¢nicas espec√≠ficas para usu√°rios da For√ßa.',
      regras: [
        {
          titulo: 'Alinhamento com a For√ßa',
          conteudo: 'Personagens podem se alinhar com o Lado Luminoso ou Sombrio da For√ßa, afetando habilidades dispon√≠veis e intera√ß√µes.'
        },
        {
          titulo: 'Poderes da For√ßa',
          conteudo: 'Cada poder tem um custo em pontos de For√ßa e pode ser aprimorado com pontos de habilidade. Alguns poderes t√™m requisitos de alinhamento.'
        },
        {
          titulo: 'Medita√ß√£o e Recupera√ß√£o',
          conteudo: 'Usu√°rios da For√ßa podem recuperar pontos de For√ßa atrav√©s de medita√ß√£o e descanso. O tempo necess√°rio varia com o n√≠vel de poder.'
        }
      ]
    },
    {
      nome: 'Regras de Equipamento',
      icon: 'üõ†Ô∏è',
      cor: '#ffb300',
      desc: 'Sistema de equipamentos, armas e modifica√ß√µes.',
      regras: [
        {
          titulo: 'Sabres de Luz',
          conteudo: 'Arma ic√¥nica dos usu√°rios da For√ßa. Pode ser personalizada com diferentes cristais e modifica√ß√µes. Requer treinamento espec√≠fico.'
        },
        {
          titulo: 'Armas de Fogo',
          conteudo: 'Blasters e outras armas de fogo t√™m diferentes tipos de muni√ß√£o, alcance e dano. Podem ser modificadas para melhor desempenho.'
        },
        {
          titulo: 'Armaduras e Prote√ß√£o',
          conteudo: 'Diferentes tipos de armadura oferecem prote√ß√£o variada. Algumas podem interferir com o uso da For√ßa.'
        }
      ]
    },
    {
      nome: 'Regras de Navega√ß√£o',
      icon: 'üõ∏',
      cor: '#00eaff',
      desc: 'Sistema de viagens e combate espacial.',
      regras: [
        {
          titulo: 'Pilotagem',
          conteudo: 'Habilidades de pilotagem afetam o controle da nave, manobras e combate espacial. Diferentes naves t√™m caracter√≠sticas √∫nicas.'
        },
        {
          titulo: 'Combate Espacial',
          conteudo: 'Sistema espec√≠fico para batalhas entre naves, incluindo posicionamento, armas e escudos.'
        },
        {
          titulo: 'Hiperespa√ßo',
          conteudo: 'Regras para viagens entre sistemas, incluindo c√°lculos de rota, riscos e consumo de combust√≠vel.'
        }
      ]
    },
    {
      nome: 'Regras de Intera√ß√£o',
      icon: 'ü§ù',
      cor: '#00ff9d',
      desc: 'Sistema de di√°logos, reputa√ß√£o e miss√µes.',
      regras: [
        {
          titulo: 'Di√°logos e Persuas√£o',
          conteudo: 'Sistema de escolhas de di√°logo que afetam a reputa√ß√£o e o desenvolvimento da hist√≥ria. Habilidades sociais podem influenciar resultados.'
        },
        {
          titulo: 'Reputa√ß√£o',
          conteudo: 'Personagens ganham ou perdem reputa√ß√£o com diferentes fac√ß√µes baseado em suas a√ß√µes. Afeta pre√ßos, miss√µes dispon√≠veis e rea√ß√µes de NPCs.'
        },
        {
          titulo: 'Miss√µes',
          conteudo: 'Diferentes tipos de miss√µes (principais, secund√°rias, aleat√≥rias) com recompensas e consequ√™ncias variadas.'
        }
      ]
    }
  ];

  // Fun√ß√£o para inicializar o menu de combate
  function initCombateMenu() {
    const menuBtn = document.querySelector('.combate-menu-btn');
    const combateMenu = document.querySelector('.combate-menu');
    const modoDescArea = document.querySelector('.estilo-desc-content');

    console.log('Menu Button:', menuBtn);
    console.log('Menu:', combateMenu);

    if (menuBtn && combateMenu) {
      // Remover event listeners existentes
      const newMenuBtn = menuBtn.cloneNode(true);
      menuBtn.parentNode.replaceChild(newMenuBtn, menuBtn);

      newMenuBtn.addEventListener('click', function(e) {
        console.log('Menu button clicked');
        e.preventDefault();
        e.stopPropagation();
        combateMenu.classList.toggle('active');
        console.log('Menu active:', combateMenu.classList.contains('active'));
      });

      document.querySelectorAll('.combate-mode').forEach(mode => {
        mode.addEventListener('click', (e) => {
          e.stopPropagation();
          const idx = mode.getAttribute('data-idx');
          const modo = combateModes[idx];
          if (modoDescArea) {
            modoDescArea.innerHTML = `
              <div class='modo-detalhe'>
                <h3>${modo.nome}</h3>
                <div class="modo-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${modo.desc}</p>
                  <p><b>Regras:</b> ${modo.regras}</p>
                  <p><b>Vantagens:</b> ${modo.vantagens}</p>
                  <p><b>Desvantagens:</b> ${modo.desvantagens}</p>
                </div>
              </div>
            `;
          }
          combateMenu.classList.remove('active');
          document.querySelectorAll('.combate-mode').forEach(m => m.classList.remove('active'));
          mode.classList.add('active');
        });
      });

      // Fechar menu ao clicar fora
      document.addEventListener('click', (e) => {
        if (!e.target.closest('.combate-options')) {
          combateMenu.classList.remove('active');
        }
      });
    }
  }

  function showSection(section) {
    // Atualizar navLinks sempre que uma se√ß√£o for exibida
    navLinks = document.querySelectorAll('.main-nav a');
    
    // Remover classe active de todos os links
    navLinks.forEach(link => link.classList.remove('active'));
    
    // Adicionar classe active ao link atual
    const activeLink = Array.from(navLinks).find(link => link.dataset.section === section);
    if (activeLink) activeLink.classList.add('active');

    // Mostrar conte√∫do da se√ß√£o
    if (section === 'home') {
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">Bem-vindo √† Gal√°xia</span>
          <h1 class="section-title">Bem-Vindo √† Gal√°xia: Ascens√£o Inesperada</h1>
          <div class="section-desc home-desc">
            <p>
              <b>Prepare-se para embarcar em uma jornada √∫nica pelo universo de Star Wars!</b> <br><br>
              <b>Ascens√£o Inesperada</b> √© um projeto de RPG desenvolvido ao longo de <b>nove meses</b> de dedica√ß√£o, pesquisa e paix√£o. Aqui, voc√™ encontrar√° um novo cap√≠tulo na gal√°xia muito, muito distante, onde <b>dramas intensos</b>, <b>romances improv√°veis</b>, <b>batalhas √©picas</b> e <b>dilemas morais</b> se entrela√ßam para criar uma experi√™ncia imersiva e inesquec√≠vel.<br><br>
              Nossa hist√≥ria se inicia durante a lend√°ria era de <b>Anakin Skywalker</b>, mas se expande para territ√≥rios inexplorados, onde <b>novos her√≥is</b> e <b>vil√µes</b> surgem, prontos para desafiar o destino da gal√°xia. <br><br>
              <b>Qual ser√° o seu caminho?</b> Voc√™ pode trilhar a senda de um Padawan em ascens√£o, tornar-se um mercador astuto, um ca√ßador de recompensas implac√°vel, um agente das sombras ou at√© mesmo um mestre da For√ßa. <br><br>
              Este guia foi criado para ser seu <b>holocron pessoal</b>:
            </p>
            <ul class="home-list">
              <li>Descubra as <b>Esp√©cies</b> que habitam cada canto da gal√°xia;</li>
              <li>Domine as <b>Habilidades da For√ßa</b> e compreenda seus mist√©rios;</li>
              <li>Escolha seu <b>Caminho</b> entre as diferentes classes e estilos de vida;</li>
              <li>Explore os lend√°rios <b><a href="#" data-section="estilos-combate" class="home-link">Estilos de Combate Jedi</a></b> e suas filosofias;</li>
              <li>Entenda a <b>Vis√£o Geral do Sistema</b> de jogo, com regras, reputa√ß√£o, alinhamento e muito mais.</li>
            </ul>
            <p>
              <b>Explore, escolha, desafie e escreva sua pr√≥pria lenda.</b> <br>
              Que a For√ßa esteja com voc√™ em cada decis√£o!
            </p>
          </div>
          <div class="section-quote">Sua Aventura na Gal√°xia Come√ßa Agora.</div>
          <div class="home-credits">
            <span>Site e sistema desenvolvidos por <b>Vitor Costa</b> &mdash; Web Developer & Estudante de Ci√™ncia da Computa√ß√£o.<br>
            Star Wars &copy; Lucasfilm/Disney. Este projeto √© uma obra de f√£, sem fins lucrativos.</span>
          </div>
        </div>
        <div class="section-right home-visual">
          <img src="images/home/galaxy-hero.png" alt="Era de Anakin Skywalker" class="home-hero-img">
          <div class="section-side-titles">
            <span>JEDIS</span>
            <span>SITH</span>
            <span>DIVERSOS</span>
          </div>
        </div>
      `;

      // Adicionar listener para o link de estilos de combate
      setTimeout(() => {
        const combateLink = document.querySelector('.home-link[data-section="estilos-combate"]');
        if (combateLink) {
          combateLink.addEventListener('click', (e) => {
            e.preventDefault();
            showSection('estilos-combate');
            document.querySelectorAll('.main-nav a').forEach(a => a.classList.remove('active'));
            document.querySelector('.main-nav a[data-section="estilos-combate"]').classList.add('active');
          });
        }
      }, 100);
    } else if (section === 'estilos-combate') {
      sectionContent.innerHTML = `
        <div class="estilos-combate-container">
          <div class="section-header">
            <span class="section-subtitle">Artes Marciais Jedi</span>
            <h1 class="section-title">Estilos de Combate Jedi</h1>
            <p class="section-desc">
              Os estilos de combate Jedi s√£o mais do que simples t√©cnicas de luta - s√£o express√µes da filosofia e personalidade de cada praticante. Cada estilo reflete uma abordagem √∫nica de combate e uma compreens√£o particular da For√ßa.
            </p>
          </div>
          
          <div class="estilos-cards">
            ${estilosCombateList.map((estilo, idx) => `
              <div class="estilo-card" data-idx="${idx}" tabindex="0">
                <div class="estilo-img-container">
                  <img src="${estilo.img}" alt="${estilo.nome}" class="estilo-img">
                </div>
                <div class="estilo-nome">${estilo.nome}</div>
              </div>
            `).join('')}
          </div>
          
          <div class="estilo-desc-area">
            <div class="estilo-desc-content">
              <span class="estilo-desc-placeholder">Selecione um estilo para ver detalhes.</span>
            </div>
          </div>
        </div>
      `;
      
      // Interatividade: mostrar descri√ß√£o ao clicar/focar
      setTimeout(() => {
        const descArea = document.querySelector('.estilo-desc-content');
        document.querySelectorAll('.estilo-card').forEach(card => {
          card.addEventListener('click', () => {
            const idx = card.getAttribute('data-idx');
            const estilo = estilosCombateList[idx];
            descArea.innerHTML = `
              <div class='estilo-detalhe'>
                <h3>${estilo.titulo}</h3>
                <div class="estilo-detalhe-content">${estilo.desc}</div>
              </div>
            `;
            document.querySelectorAll('.estilo-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
          
          card.addEventListener('focus', () => {
            const idx = card.getAttribute('data-idx');
            const estilo = estilosCombateList[idx];
            descArea.innerHTML = `
              <div class='estilo-detalhe'>
                <h3>${estilo.titulo}</h3>
                <div class="estilo-detalhe-content">${estilo.desc}</div>
              </div>
            `;
            document.querySelectorAll('.estilo-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
        });
      }, 100);
    } else if (section === 'racas') {
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">Bem-vindo √† Gal√°xia</span>
          <h1 class="section-title">ESP√âCIES DA GAL√ÅXIA</h1>
          <p class="section-desc">Das profundezas de Dagobah √†s alturas de Coruscant, explore as diversas esp√©cies que habitam a gal√°xia muito, muito distante. Cada uma com habilidades √∫nicas, culturas e pap√©is.</p>
          <div class="section-quote">A Diversidade impulsiona a For√ßa.</div>
          
          <div class="racas-container">
            <div class="racas-cards">
              ${racasList.map((raca, idx) => `
                <div class="raca-card" data-idx="${idx}" tabindex="0">
                  <div class="raca-img-container">
                    <img src="${raca.img}" alt="${raca.nome}" class="raca-img">
                  </div>
                  <div class="raca-nome">${raca.nome}</div>
                </div>
              `).join('')}
            </div>
            <div class="raca-desc-area">
              <div class="raca-desc-content">
                <span class="raca-desc-placeholder">Selecione uma ra√ßa para ver detalhes.</span>
              </div>
            </div>
          </div>
        </div>
        <div class="section-right">
          <div class="racas-bg-icons">
            <span class="icon-republica">&#9737;</span>
            <span class="icon-imperio">&#9760;</span>
            <span class="icon-jedi">&#10024;</span>
            <span class="icon-sith">&#9762;</span>
          </div>
          <svg class="racas-holo-lines" viewBox="0 0 400 200">
            <path d="M0,100 Q100,0 200,100 T400,100" stroke="#00eaff55" stroke-width="2" fill="none"/>
          </svg>
        </div>
      `;
      
      // Interatividade: mostrar descri√ß√£o ao clicar/focar
      setTimeout(() => {
        const descArea = document.querySelector('.raca-desc-content');
        document.querySelectorAll('.raca-card').forEach(card => {
          card.addEventListener('click', () => {
            const idx = card.getAttribute('data-idx');
            const raca = racasList[idx];
            descArea.innerHTML = `
              <div class='raca-detalhe'>
                <h3>${raca.nome}</h3>
                <div class="raca-detalhe-content">
                  <p><b>Origem:</b> ${raca.origem || 'Planeta natal desconhecido'}</p>
                  <p><b>Caracter√≠sticas:</b> ${raca.caracteristicas || 'Esp√©cie √∫nica com habilidades especiais'}</p>
                  <p><b>Habilidades Naturais:</b> ${raca.habilidades || 'Adapta√ß√£o natural ao seu ambiente'}</p>
                </div>
              </div>
            `;
            // Adicionar classe ativa ao card selecionado
            document.querySelectorAll('.raca-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
          
          card.addEventListener('focus', () => {
            const idx = card.getAttribute('data-idx');
            const raca = racasList[idx];
            descArea.innerHTML = `
              <div class='raca-detalhe'>
                <h3>${raca.nome}</h3>
                <div class="raca-detalhe-content">
                  <p><b>Origem:</b> ${raca.origem || 'Planeta natal desconhecido'}</p>
                  <p><b>Caracter√≠sticas:</b> ${raca.caracteristicas || 'Esp√©cie √∫nica com habilidades especiais'}</p>
                  <p><b>Habilidades Naturais:</b> ${raca.habilidades || 'Adapta√ß√£o natural ao seu ambiente'}</p>
                </div>
              </div>
            `;
            // Adicionar classe ativa ao card selecionado
            document.querySelectorAll('.raca-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
        });
      }, 100);
    } else if (section === 'habilidades') {
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">Bem-vindo √† Gal√°xia</span>
          <h1 class="section-title">DOMINAR A FOR√áA</h1>
          <p class="section-desc">A For√ßa flui atrav√©s de todos os seres vivos, mas como algu√©m a manipula define seu destino. Da telecinese aos rel√¢mpagos, da persuas√£o √† precogni√ß√£o, aprenda os poderes que moldam a gal√°xia.</p>
          <div class="section-quote">O Equil√≠brio √© uma escolha. O Poder √© um caminho.</div>
          
          <div class="habilidades-container">
            <div class="habilidades-cards">
              ${habilidadesList.map((habilidade, idx) => `
                <div class="habilidade-card" data-idx="${idx}" tabindex="0" style="--cor:${habilidade.cor}">
                  <div class="habilidade-icon">${habilidade.icon}</div>
                  <div class="habilidade-nome">${habilidade.nome}</div>
                </div>
              `).join('')}
            </div>
            <div class="habilidade-desc-area">
              <div class="habilidade-desc-content">
                <span class="habilidade-desc-placeholder">Selecione uma habilidade para ver detalhes.</span>
              </div>
            </div>
          </div>
        </div>
        <div class="section-right">
          <div class="habilidades-console">
            <div class="jedi-holo"></div>
            <div class="sith-holo"></div>
          </div>
          <svg class="habilidades-holo-lines" viewBox="0 0 400 200">
            <path d="M20,180 Q200,20 380,180" stroke="#00eaff55" stroke-width="2" fill="none"/>
          </svg>
        </div>
      `;
      
      // Interatividade: mostrar descri√ß√£o ao clicar/focar
      setTimeout(() => {
        const descArea = document.querySelector('.habilidade-desc-content');
        document.querySelectorAll('.habilidade-card').forEach(card => {
          card.addEventListener('click', () => {
            const idx = card.getAttribute('data-idx');
            const habilidade = habilidadesList[idx];
            descArea.innerHTML = `
              <div class='habilidade-detalhe'>
                <h3>${habilidade.nome}</h3>
                <div class="habilidade-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${habilidade.desc}</p>
                  <p><b>N√≠vel de Poder:</b> ${habilidade.nivel || 'Intermedi√°rio'}</p>
                  <p><b>Requisitos:</b> ${habilidade.requisitos || 'Conex√£o com a For√ßa'}</p>
                  <p><b>Alinhamento:</b> ${habilidade.alinhamento || 'Ambos os lados da For√ßa'}</p>
                </div>
              </div>
            `;
            // Adicionar classe ativa ao card selecionado
            document.querySelectorAll('.habilidade-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
          
          card.addEventListener('focus', () => {
            const idx = card.getAttribute('data-idx');
            const habilidade = habilidadesList[idx];
            descArea.innerHTML = `
              <div class='habilidade-detalhe'>
                <h3>${habilidade.nome}</h3>
                <div class="habilidade-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${habilidade.desc}</p>
                  <p><b>N√≠vel de Poder:</b> ${habilidade.nivel || 'Intermedi√°rio'}</p>
                  <p><b>Requisitos:</b> ${habilidade.requisitos || 'Conex√£o com a For√ßa'}</p>
                  <p><b>Alinhamento:</b> ${habilidade.alinhamento || 'Ambos os lados da For√ßa'}</p>
                </div>
              </div>
            `;
            // Adicionar classe ativa ao card selecionado
            document.querySelectorAll('.habilidade-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
        });
      }, 100);
    } else if (section === 'classes') {
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">Bem-vindo √† Gal√°xia</span>
          <h1 class="section-title">CAMINHOS DA GAL√ÅXIA</h1>
          <p class="section-desc">Nem todos seguem o caminho da For√ßa. Alguns dominam a tecnologia, outros o combate. Escolha seu papel, molde seu destino.</p>
          <div class="section-quote">Todo caminho leva a um legado.</div>
          
          <div class="classes-container">
            <div class="classes-cards">
              ${classesList.map((classe, idx) => `
                <div class="classe-card" data-idx="${idx}" tabindex="0" style="--cor:${classe.cor}">
                  <div class="classe-icon">${classe.icon}</div>
                  <div class="classe-nome">${classe.nome}</div>
                </div>
              `).join('')}
            </div>
            <div class="classe-desc-area">
              <div class="classe-desc-content">
                <span class="classe-desc-placeholder">Selecione uma classe para ver detalhes.</span>
              </div>
            </div>
          </div>
        </div>
        <div class="section-right">
          <svg class="classes-holo-lines" viewBox="0 0 400 200">
            <circle cx="200" cy="100" r="90" stroke="#00eaff55" stroke-width="2" fill="none"/>
            <circle cx="200" cy="100" r="40" stroke="#a100ff55" stroke-width="1.5" fill="none"/>
          </svg>
          <div class="classes-stars">
            <span class="star" style="top:10%;left:20%"></span>
            <span class="star" style="top:60%;left:80%"></span>
            <span class="star" style="top:30%;left:60%"></span>
            <span class="star" style="top:80%;left:30%"></span>
          </div>
        </div>
      `;
      
      // Interatividade: mostrar descri√ß√£o ao clicar/focar
      setTimeout(() => {
        const descArea = document.querySelector('.classe-desc-content');
        document.querySelectorAll('.classe-card').forEach(card => {
          card.addEventListener('click', () => {
            const idx = card.getAttribute('data-idx');
            const classe = classesList[idx];
            descArea.innerHTML = `
              <div class='classe-detalhe'>
                <h3>${classe.nome}</h3>
                <div class="classe-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${classe.desc}</p>
                  <p><b>Habilidades Principais:</b> ${classe.habilidades || 'Combate corpo a corpo e defesa'}</p>
                  <p><b>Equipamento T√≠pico:</b> ${classe.equipamento || 'Sabre de luz e armadura Jedi'}</p>
                  <p><b>Alinhamento:</b> ${classe.alinhamento || 'Lado Luminoso da For√ßa'}</p>
                </div>
              </div>
            `;
            // Adicionar classe ativa ao card selecionado
            document.querySelectorAll('.classe-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
          
          card.addEventListener('focus', () => {
            const idx = card.getAttribute('data-idx');
            const classe = classesList[idx];
            descArea.innerHTML = `
              <div class='classe-detalhe'>
                <h3>${classe.nome}</h3>
                <div class="classe-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${classe.desc}</p>
                  <p><b>Habilidades Principais:</b> ${classe.habilidades || 'Combate corpo a corpo e defesa'}</p>
                  <p><b>Equipamento T√≠pico:</b> ${classe.equipamento || 'Sabre de luz e armadura Jedi'}</p>
                  <p><b>Alinhamento:</b> ${classe.alinhamento || 'Lado Luminoso da For√ßa'}</p>
                </div>
              </div>
            `;
            // Adicionar classe ativa ao card selecionado
            document.querySelectorAll('.classe-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
        });
      }, 100);
    } else if (section === 'sistema') {
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">Bem-vindo √† Gal√°xia</span>
          <h1 class="section-title">VIS√ÉO GERAL DO SISTEMA</h1>
          <p class="section-desc">Um sistema detalhado projetado para imergir voc√™ no universo Star Wars. Combate, maestria da For√ßa, reputa√ß√£o, alinhamento e muito mais.</p>
          <div class="section-quote">Seu destino √© seu para forjar.</div>
          
          <div class="sistema-container">
            <div class="sistema-cards">
              ${sistemaList.map((sistema, idx) => `
                <div class="sistema-card" data-idx="${idx}" tabindex="0" style="--cor:${sistema.cor}">
                  <div class="sistema-icon">${sistema.icon}</div>
                  <div class="sistema-nome">${sistema.nome}</div>
                </div>
              `).join('')}
            </div>
            <div class="sistema-desc-area">
              <div class="sistema-desc-content">
                <span class="sistema-desc-placeholder">Selecione um aspecto do sistema para ver detalhes.</span>
              </div>
            </div>
          </div>
        </div>
        <div class="section-right">
          <div class="sistema-holo-panel">
            <svg class="sistema-circuit" viewBox="0 0 400 200">
              <polyline points="10,100 100,30 200,100 300,170 390,100" stroke="#00eaff55" stroke-width="2" fill="none"/>
              <circle cx="100" cy="30" r="6" fill="#00eaff"/>
              <circle cx="200" cy="100" r="6" fill="#a100ff"/>
              <circle cx="300" cy="170" r="6" fill="#ffb300"/>
            </svg>
            <div class="sistema-icons">
              <span title="Nave"><span class="sistema-icon">üõ∏</span></span>
              <span title="Sabre de Luz"><span class="sistema-icon">üó°Ô∏è</span></span>
              <span title="Planeta"><span class="sistema-icon">ü™ê</span></span>
            </div>
          </div>
        </div>
      `;
      
      // Interatividade: mostrar descri√ß√£o ao clicar/focar
      setTimeout(() => {
        const descArea = document.querySelector('.sistema-desc-content');
        document.querySelectorAll('.sistema-card').forEach(card => {
          card.addEventListener('click', () => {
            const idx = card.getAttribute('data-idx');
            const sistema = sistemaList[idx];
            descArea.innerHTML = `
              <div class='sistema-detalhe'>
                <h3>${sistema.nome}</h3>
                <div class="sistema-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${sistema.desc}</p>
                  <p><b>Mec√¢nicas:</b> ${sistema.mecanicas}</p>
                  <p><b>Intera√ß√µes:</b> ${sistema.interacoes}</p>
                  <p><b>Desenvolvimento:</b> ${sistema.desenvolvimento}</p>
                </div>
              </div>
            `;
            document.querySelectorAll('.sistema-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
          
          card.addEventListener('focus', () => {
            const idx = card.getAttribute('data-idx');
            const sistema = sistemaList[idx];
            descArea.innerHTML = `
              <div class='sistema-detalhe'>
                <h3>${sistema.nome}</h3>
                <div class="sistema-detalhe-content">
                  <p><b>Descri√ß√£o:</b> ${sistema.desc}</p>
                  <p><b>Mec√¢nicas:</b> ${sistema.mecanicas}</p>
                  <p><b>Intera√ß√µes:</b> ${sistema.interacoes}</p>
                  <p><b>Desenvolvimento:</b> ${sistema.desenvolvimento}</p>
                </div>
              </div>
            `;
            document.querySelectorAll('.sistema-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
        });
      }, 100);
    } else if (section === 'regras') {
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">Bem-vindo √† Gal√°xia</span>
          <h1 class="section-title">REGRAS DO SISTEMA</h1>
          <p class="section-desc">Um guia detalhado de todas as regras e mec√¢nicas do sistema, organizado por categorias para f√°cil consulta.</p>
          <div class="section-quote">O conhecimento √© o caminho para a maestria.</div>
          
          <div class="regras-container">
            <div class="regras-cards">
              ${regrasList.map((regra, idx) => `
                <div class="regra-card" data-idx="${idx}" tabindex="0" style="--cor:${regra.cor}">
                  <div class="regra-icon">${regra.icon}</div>
                  <div class="regra-info">
                    <h3 class="regra-nome">${regra.nome}</h3>
                    <p class="regra-desc">${regra.desc}</p>
                  </div>
                </div>
              `).join('')}
            </div>
            <div class="regra-desc-area">
              <div class="regra-desc-content">
                <span class="regra-desc-placeholder">Selecione uma categoria de regras para ver detalhes.</span>
              </div>
            </div>
          </div>
        </div>
        <div class="section-right">
          <div class="regras-holo-panel">
            <svg class="regras-circuit" viewBox="0 0 400 200">
              <path d="M20,100 Q100,20 200,100 T380,100" stroke="#00eaff55" stroke-width="2" fill="none"/>
              <circle cx="100" cy="20" r="6" fill="#00eaff"/>
              <circle cx="200" cy="100" r="6" fill="#a100ff"/>
              <circle cx="300" cy="180" r="6" fill="#ffb300"/>
            </svg>
          </div>
        </div>
      `;
      
      // Interatividade: mostrar descri√ß√£o ao clicar/focar
      setTimeout(() => {
        const descArea = document.querySelector('.regra-desc-content');
        document.querySelectorAll('.regra-card').forEach(card => {
          card.addEventListener('click', () => {
            const idx = card.getAttribute('data-idx');
            const regra = regrasList[idx];
            descArea.innerHTML = `
              <div class='regra-detalhe'>
                <h3>${regra.nome}</h3>
                <div class="regra-detalhe-content">
                  ${regra.regras.map(r => `
                    <div class="regra-item">
                      <h4>${r.titulo}</h4>
                      <p>${r.conteudo}</p>
                    </div>
                  `).join('')}
                </div>
              </div>
            `;
            document.querySelectorAll('.regra-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
          
          card.addEventListener('focus', () => {
            const idx = card.getAttribute('data-idx');
            const regra = regrasList[idx];
            descArea.innerHTML = `
              <div class='regra-detalhe'>
                <h3>${regra.nome}</h3>
                <div class="regra-detalhe-content">
                  ${regra.regras.map(r => `
                    <div class="regra-item">
                      <h4>${r.titulo}</h4>
                      <p>${r.conteudo}</p>
                    </div>
                  `).join('')}
                </div>
              </div>
            `;
            document.querySelectorAll('.regra-card').forEach(c => c.classList.remove('active'));
            card.classList.add('active');
          });
        });
      }, 100);
    } else {
      const data = sections[section] || sections.home;
      sectionContent.innerHTML = `
        <div class="section-left">
          <span class="section-subtitle">${data.subtitle}</span>
          <h1 class="section-title">${data.title}</h1>
          <p class="section-desc">${data.desc}</p>
        </div>
        <div class="section-right">
          <div class="section-visual-placeholder">[Visual Star Wars]</div>
          <div class="section-side-titles">
            <span>JEDIS</span>
            <span>SITH</span>
            <span>DIVERSOS</span>
          </div>
        </div>
      `;
    }
  }

  // Bot√£o da Landing Page
  if (startBtn) {
    startBtn.addEventListener('click', () => {
      landing.classList.remove('active');
      setTimeout(() => {
        landing.style.display = 'none';
        mainApp.classList.add('active');
        showSection('home');
      }, 700);
    });
  }

  function addNavListeners() {
    document.querySelectorAll('.main-nav a').forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const section = e.target.getAttribute('data-section');
        if (section) {
          showSection(section);
          document.querySelectorAll('.main-nav a').forEach(a => a.classList.remove('active'));
          e.target.classList.add('active');
        }
      });
    });
  }

  function renderNavMenu() {
    const nav = document.querySelector('.main-nav ul');
    nav.innerHTML = navMenuOrder.map(item => 
      `<li><a href="#${item}" data-section="${item}">${item}</a></li>`
    ).join('');
    addNavListeners();
  }

  // Inicializa√ß√£o
  renderNavMenu();

  // Carregar se√ß√£o correta ao acessar via hash
  if (window.location.hash) {
    landing.classList.remove('active');
    landing.style.display = 'none';
    mainApp.classList.add('active');
    const section = window.location.hash.replace('#', '');
    showSection(section);
  }
});